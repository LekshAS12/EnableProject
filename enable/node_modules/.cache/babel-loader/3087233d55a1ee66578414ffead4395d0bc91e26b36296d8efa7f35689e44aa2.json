{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectEnable\\\\enable\\\\src\\\\incidentlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar.js';\nimport './incidentlist.css';\nimport Navbar from './Navbar.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncidentList = () => {\n  _s();\n  const [incidents, setIncidents] = useState([{\n    id: 1,\n    name: 'Incident 1',\n    description: 'Description of Incident 1',\n    date: '2023-08-16',\n    priority: 'High',\n    progress: 'In Progress',\n    isOpen: false // Add isOpen property to track if description is open\n  }, {\n    id: 2,\n    name: 'Incident 2',\n    priority: 'Medium',\n    progress: 'In Progress',\n    date: '2023-08-16',\n    description: 'Description of Incident 2'\n  }\n  // Add more incidents as needed\n  ]);\n\n  const handleIncidentClick = id => {\n    const updatedIncidents = incidents.map(incident => incident.id === id ? {\n      ...incident,\n      isOpen: !incident.isOpen\n    } : {\n      ...incident,\n      isOpen: false\n    });\n    setIncidents(updatedIncidents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incident-list\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incident List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"incident-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Incident Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: incidents.map((incident, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => handleIncidentClick(incident.id),\n                className: \"clickable-incident\",\n                children: incident.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: incident.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: incident.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: incident.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), incident.isOpen && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"incident-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: incident.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: incident.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, incident.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(IncidentList, \"eBrAYHOXa/FXOyu7ky0slXgKLIw=\");\n_c = IncidentList;\nexport default IncidentList;\nvar _c;\n$RefreshReg$(_c, \"IncidentList\");","map":{"version":3,"names":["React","useState","Sidebar","Navbar","jsxDEV","_jsxDEV","IncidentList","_s","incidents","setIncidents","id","name","description","date","priority","progress","isOpen","handleIncidentClick","updatedIncidents","map","incident","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","Fragment","onClick","colSpan","_c","$RefreshReg$"],"sources":["D:/ProjectEnable/enable/src/incidentlist.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Sidebar from './Sidebar.js';\r\nimport './incidentlist.css';\r\nimport Navbar from './Navbar.js';\r\nimport './App.css';\r\n\r\nconst IncidentList = () => {\r\n  const [incidents, setIncidents] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Incident 1',\r\n      description: 'Description of Incident 1',\r\n      date: '2023-08-16',\r\n      priority: 'High',\r\n      progress: 'In Progress',\r\n      isOpen: false, // Add isOpen property to track if description is open\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Incident 2',\r\n      priority: 'Medium',\r\n      progress: 'In Progress',\r\n      date: '2023-08-16',\r\n      description: 'Description of Incident 2',\r\n    },\r\n    // Add more incidents as needed\r\n  ]);\r\n\r\n  const handleIncidentClick = (id) => {\r\n    const updatedIncidents = incidents.map((incident) =>\r\n      incident.id === id\r\n        ? { ...incident, isOpen: !incident.isOpen }\r\n        : { ...incident, isOpen: false }\r\n    );\r\n    setIncidents(updatedIncidents);\r\n  };\r\n\r\n  return (\r\n   \r\n    <div className = \"app-container\">\r\n    <div className= \"incident-list\">\r\n        <Navbar />\r\n      <Sidebar/>\r\n      <h1>Incident List</h1>\r\n      <table className=\"incident-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Serial Number</th>\r\n            <th>Incident Name</th>\r\n            <th>Date</th>\r\n            <th>Priority</th>\r\n            <th>Progress</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {incidents.map((incident, index) => (\r\n            <React.Fragment key={incident.id}>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td onClick={() => handleIncidentClick(incident.id)} className=\"clickable-incident\">\r\n                  {incident.name}\r\n                </td>\r\n                <td>{incident.date}</td>\r\n                <td>{incident.priority}</td>\r\n                <td>{incident.progress}</td>\r\n              </tr>\r\n              {incident.isOpen && (\r\n                <tr>\r\n                  <td colSpan=\"5\">\r\n                    <div className=\"incident-description\">\r\n                      <h2>{incident.name}</h2>\r\n                      <p>{incident.description}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}